type Query {
        
        
        comments(query: String): [Comment!]! 
    }

    type Mutation {
        

        createComment(data: CreateCommentInput): Comment!

        deleteComment(id: ID!, authorId: ID!, postId: ID!): Comment!

        updateComment(id: ID!, authorId: ID!, postId: ID!, data: UpdateCommentInput): Comment!
    }

    type Subscription {
       
        comment(postId: ID!): CommentSubscriptionPayload!
        
    }

    

    input CreateCommentInput {
        text: String!
        authorId: ID!
        postId: ID!
    }

    input UpdateCommentInput {
        text: String
        
        
    }
    


    type Comment {
        id: ID!
        text: String!
        authorId: User!
        postId: Post!
    }



   

    

    type CommentSubscriptionPayload {
        mutation: MutationType!
        data: Comment!
    }


